{"remainingRequest":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SLA Projects\\vue-main\\vue-main\\src\\components\\common\\customizer.vue?vue&type=template&id=4ed27c5a&scoped=true&","dependencies":[{"path":"D:\\SLA Projects\\vue-main\\vue-main\\src\\components\\common\\customizer.vue","mtime":1638958197890},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}