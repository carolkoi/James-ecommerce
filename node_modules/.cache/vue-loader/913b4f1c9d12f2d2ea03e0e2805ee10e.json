{"remainingRequest":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SLA Projects\\vue-main\\vue-main\\src\\containers\\layouts\\verticalSidebarTwo\\verticalSidebar.vue?vue&type=template&id=47b485b7&","dependencies":[{"path":"D:\\SLA Projects\\vue-main\\vue-main\\src\\containers\\layouts\\verticalSidebarTwo\\verticalSidebar.vue","mtime":1634802783335},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\SLA Projects\\vue-main\\vue-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}